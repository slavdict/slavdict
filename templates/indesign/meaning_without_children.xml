{% macro meaning(m, peer_meanings_loop, parent_meanings_loop, child_meanings) %}
{% from 'indesign/example.xml' import example with context %}

{% if m.contexts %}
    <meaning-context>
    {% for mc in m.contexts %}

        {% if loop.first %}
                <x aid:cstyle="Text">[</x>
        {% endif %}

        {% if mc.left_text %}
            <x aid:cstyle="Em">{{ mc.left_text }}</x>
            {{ space }}
        {% endif %}

        {% if mc.context %}
            {{ mc.context_ucs|ind_cslav_words("CSLSegment") }}
            {{ space }}
        {% endif %}

        {% if mc.right_text %}
            <x aid:cstyle="Em">{{ mc.right_text }}</x>
        {% endif %}

        {% if loop.last %}
            {{ backspace }}<x aid:cstyle="Text">]</x>
        {% else %}
            {{ backspace }}<x aid:cstyle="Text">,</x>{{ space }}
        {% endif %}

    {% endfor %}
    </meaning-context>{{ space }}
{% endif %}


{% if m.substantivus %}

    {% for substantivus_form_ucs in m.substantivus_forms %}
        {% if not loop.first %}
            {{ backspace }}<x aid:cstyle="Text">,</x>{{ space }}
        {% endif %}

        {% if (loop.last or loop.index == 3) and
                m.substantivus_type == 'b' %}{# ср. род, мн. число #}
            {{ backspace }}{{ space }}
            <x aid:cstyle="Em">мн.</x>{{ space }}
        {% elif loop.last and m.substantivus_type == 'e' %}{# ж. род, ед. число #}
            {{ backspace }}{{ space }}
            <x aid:cstyle="Em">ж.</x>{{ space }}
        {% endif %}

        <x>{{ substantivus_form_ucs|ind_cslav_words }}</x>{{ space }}
    {% endfor %}

    {{ backspace }}{{ space }}
    <x aid:cstyle="Em">в{{ nbsp }}роли сущ.</x>
    {{ space }}

{% else %}

    {% if m.substantivus_csl %}
        {{ backspace }}{{ space }}
        <x>{{ m.substantivus_csl_ucs|ind_cslav_words }}</x>{{ space }}
    {% endif %}

{% endif %}


{% if m.figurative %}
    {{ backspace }}{{ space }}
    <i aid:cstyle="Em">перен.</i>{{ space }}
{% endif %}

{% if m.meaning %}
    <meaning aid:cstyle="Text">{{ m.meaning|
        ind_cslav_injection|
        ind_regex('Em', '(?<![А-Яа-я])(?:перен|зд|букв)\\.')|
        ind_regex('Greek', '[\u0370-\u03FF\u1F00-\u1FFE]+') }}</meaning>
{% endif %}

{% if m.gloss %}
    {% if m.meaning or m.greek_equivs %}
        {{ backspace }}<text aid:cstyle="Text">;</text>{{ space }}
    {% endif %}
    <gloss aid:cstyle="Em">{{ m.gloss|
        ind_cslav_injection|
        ind_regex('Text', '‘[^’]+’')|
        ind_regex('GreekEm', '[\u0370-\u03FF\u1F00-\u1FFE]+') }}</gloss>
    {{ space }}
{% endif %}

{% if (m.contexts or m.substantivus or m.figurative or m.meaning or m.gloss) and m.examples %}
    {{ backspace }}<text aid:cstyle="Text">:</text>{{ space }}
{% endif %}

{% for e in m.examples %}
    {{ example(e, examples_loop=loop, peer_meanings_loop=peer_meanings_loop) }}
{% endfor %}


{% endmacro %}
{# vim: set ft=django.xml: #}
